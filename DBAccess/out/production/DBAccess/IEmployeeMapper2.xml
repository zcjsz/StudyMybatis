<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jv.tdni.mybatis.dao.IEmployeeMapper2">

    <!-- resultMap 自定义结果集映射规则， type: 自定义规则的 JavaBean 类型， id: 引用标识，是唯一的 -->
    <resultMap id="Employee" type="jv.tdni.mybatis.beans.Employee">
        <!-- 指定数据表列名与JavaBean属性的映射关系，column对应列名，property对应属性名 -->
        <!-- 用 id 标签定义主键时底层会有优化，当然可以用 result 标签来定义，只是没有优化 -->
        <id column="id" property="id" />
        <!-- 定义普通列封装规则 -->
        <result column="last_name" property="lastName" />
        <!-- 其他不指定列会自动封装，但推荐把全部列的映射规则都定义 -->
        <result column="gender" property="gender" />
        <result column="email"  property="email"  />
    </resultMap>

    <!-- public Employee getEmployeeById(Integer id); -->
    <select id="getEmployeeById" resultMap="Employee">
        select id, last_name, gender, email from employee where id = #{id}
    </select>


    <!-- 关联查询使用级联属性封装结果 -->
    <resultMap id="Employee2" type="jv.tdni.mybatis.beans.Employee">
        <id column="id" property="id" />
        <result column="last_name" property="lastName" />
        <result column="gender"    property="gender" />
        <result column="email"     property="email" />
        <result column="dept_id"   property="department.id" />
        <result column="dept_name" property="department.name" />
    </resultMap>

    <!-- 使用 association 定义级联对象封装规则 -->
    <resultMap id="Employee3" type="jv.tdni.mybatis.beans.Employee">
        <id column="id" property="id" />
        <result column="last_name" property="lastName" />
        <result column="gender"    property="gender" />
        <result column="email"     property="email" />
        <!-- association property 是 employee 的属性， javaType 是该属性对应的 JavaBean 类型 -->
        <!-- association.property.id, association.property.name 是 department 的属性 -->
        <association property="department" javaType="jv.tdni.mybatis.beans.Department">
            <id column="dept_id" property="id" />
            <result column="dept_name" property="name" />
        </association>
    </resultMap>

    <!-- 使用 association 进行分步查询 -->


    <!-- public Employee getEmpAndDeptById(Integer id); -->
    <select id="getEmpAndDeptById" resultMap="Employee3">
        select emp.id as id, last_name, gender, email, dept_id, dept_name from employee as emp
        left join department as dept on emp.dept_id = dept.id
        where emp.id = #{id}
    </select>


</mapper>